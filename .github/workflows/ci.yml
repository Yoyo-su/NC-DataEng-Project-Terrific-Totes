name: CI

on: 
  pull_request:
    branches:
      - main
  push:
    branches:
      - main 

jobs:
  run-tests:
    name: ci_jobs
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repo
      uses: actions/checkout@v4
      
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.13'

    - name: Requirements
      run: make requirements

    - name: Dev setup
      run: make dev-setup

    - name: Set PYTHONPATH
      run: echo "PYTHONPATH=${{ github.workspace }}" >> $GITHUB_ENV

    - name: check pip-audit
      run: which pip-audit

    - name: Run checks
      run: make run-checks

    - name: Load dev environment variables (credentials for totesys database) and store them in a .env.dev file
      run: 
        echo "PG_USER=${{ secrets.PG_USERNAME }}" >> .env.dev
        echo "PG_PASSWORD=${{ secrets.PG_PASSWORD_TOTESYS }}" >> .env.dev
        echo "PG_HOST=nc-data-eng-totesys-production.chpsczt8h1nu.eu-west-2.rds.amazonaws.com" >> .env.dev
        echo "PG_PORT=5432" >> .env.dev
        echo "COHORT_ID=de_2025_03_17" >> .env.dev

    - name: Load deploy environment variables (credentials for data warehouse) and store them in a .env.deploy file
      run: 
        echo "PG_USER=${{ secrets.PG_USERNAME }}" >> .env.deploy
        echo "PG_PASSWORD=${{ secrets.PG_PASSWORD_WAREHOUSE }}" >> .env.deploy
        echo "PG_HOST=nc-data-eng-project-dw-prod.chpsczt8h1nu.eu-west-2.rds.amazonaws.com" >> .env.deploy
        echo "PG_PORT=5432" >> .env.deploy
        echo "COHORT_ID=de_2025_03_17" >> .env.deploy
        
  deploy-terraform:
    name: deploy-terraform
    environment: dev
    needs: run-tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v4
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4.1.0
        with:
          aws-access-key-id: ${{ secrets.DEPLOY_USER_AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.DEPLOY_USER_AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-west-2
      - name: Install Terraform
        uses: hashicorp/setup-terraform@v3
      - name: Terraform Init
        working-directory: terraform
        run: terraform init
      - name: Terraform Plan
        working-directory: terraform
        run: terraform plan
      - name: Terraform Apply
        working-directory: terraform
        run: terraform apply -auto-approve